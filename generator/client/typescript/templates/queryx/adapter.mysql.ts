// Code generated by queryx, DO NOT EDIT.

import mysql, { RowDataPacket } from "mysql2/promise";
import { Config } from "./config";

export class Adapter {
  private db: mysql.Pool;

  constructor(config: Config) {
    this.db = mysql.createPool({
      uri: config.url,
    });
  }

  async query<R>(query: string) {
    let [rows] = await this.db.query<R & RowDataPacket[]>(query);
    return rows;
  }

  async queryOne<R>(query: string) {
    let [rows] = await this.db.query<R & RowDataPacket[]>(query);
    return rows[0] || null;
  }

  async exec() {}
}

export function rebind<T extends any[] = any[]>(query: string, args?: T) {}
