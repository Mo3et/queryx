// Code generated by queryx, DO NOT EDIT.
import { QXClient } from "../queryx";
{{- range $b := $.model.BelongsTo }}
import { {{ $b.ModelName }} } from "../{{ $b.ModelName | snake }}"
{{- end }}
{{- range $h := $.model.HasMany }}
import { {{ $h.ModelName }} } from "../{{ $h.ModelName | snake }}"
{{- end }}
{{- range $h := $.model.HasOne }}
import { {{ $h.ModelName }} } from "../{{ $h.ModelName | snake }}"
{{- end }}

export class {{ $.model.Name }} {
	{{- range $c := .model.Columns }}
  public {{ $c.Name | camel }}?: {{ tsType $c.Type }} | null;
  {{- end }}
	{{- range $b := $.model.BelongsTo }}
  public {{ $b.Name | camel }}: {{ $b.ModelName }};
  {{- end }}
	{{- range $h := $.model.HasMany }}
	public {{ $h.Name | camel }}: {{ $h.ModelName }}[];
	{{- end }}
	{{- range $h := $.model.HasOne }}
	public {{ $h.Name | camel }}: {{ $h.ModelName }};
	{{- end }}
  private _client: QXClient;

  constructor(client: QXClient) {
    this._client = client;
  }

  applyChange(change) {
    change.apply(this);
  }

  async update(change) {}
  async delete() {}

  toString() {}
  toJSON() {}
}
