// Code generated by queryx, DO NOT EDIT.

package queryx

import (
	"testing"
	"time"

	"github.com/stretchr/testify/require"
)

func TestNewTime(t *testing.T) {
	t1 := NewTime("12:11:10")
	require.Equal(t, "12:11:10", t1.Val.Format("15:04:05"))
	require.Equal(t, false, t1.Null)

	t2 := NewNullableTime(nil)
	require.Equal(t, true, t2.Null)
}

func TestTimeJSON(t *testing.T) {
	type Foo struct {
		X Time `json:"x"`
		Y Time `json:"y"`
	}
	x := NewTime("12:11:10")
	y := NewNullableTime(nil)
	s := `{"x":"12:11:10","y":null}`

	f1 := Foo{X: x, Y: y}
	b, err := json.Marshal(f1)
	require.NoError(t, err)
	require.Equal(t, s, string(b))

	var f2 Foo
	err = json.Unmarshal([]byte(s), &f2)
	require.NoError(t, err)
	require.Equal(t, x, f2.X)
	require.Equal(t, y, f2.Y)
}
