// Code generated by queryx, DO NOT EDIT.

package queryx

import (
	"testing"
	"time"

	"github.com/stretchr/testify/require"
)

func TestNewTime(t *testing.T) {
	i := NewTime("12:12:12")
	require.Equal(t, "12:12:12", i.Val.Local().Format("15:04:05"))
	require.Equal(t, false, i.Null)
}

func TestNewNullableTime(t *testing.T) {
	i := NewNullableTime(nil)
	require.Equal(t, true, i.Null)
}

func TestTimeMarshalJSON(t *testing.T) {
	i := NewTime("12:12:12")
	require.Equal(t, "12:12:12", i.Val.Local().Format("15:04:05"))
	require.Equal(t, false, i.Null)
	_, err := i.MarshalJSON()
	require.NoError(t, err)
}

func TestTimeUnmarshalJSON(t *testing.T) {
	i := NewTime("12:12:13")
	require.Equal(t, "12:12:13", i.Val.Local().Format("15:04:05"))
	require.Equal(t, false, i.Null)
	bytes, err := i.MarshalJSON()
	require.NoError(t, err)
	b := NewTime("")
	err = b.UnmarshalJSON(bytes)
	require.NoError(t, err)
	require.Equal(t, "12:12:13", b.Val.Local().Format("15:04:05"))
}

func TestTimeScan(t *testing.T) {
	i := NewTime("15:03:04")
	require.Equal(t, "15:03:04", i.Val.Local().Format("15:04:05"))
	require.Equal(t, false, i.Null)
	time, err := parseTime("12:02:05")
	require.NoError(t, err)
	err = i.Scan(*time)
	require.NoError(t, err)
	require.Equal(t, "12:02:05", i.Val.Local().Format("15:04:05"))
}

func TestTimeValue(t *testing.T) {
	i := NewTime("16:04:05")
	require.Equal(t, "16:04:05", i.Val.Local().Format("15:04:05"))
	require.Equal(t, false, i.Null)
	value, err := i.Value()
	require.NoError(t, err)
	_value := value.(time.Time)
	require.Equal(t, "16:04:05", _value.Local().Format("15:04:05"))
}
