// Code generated by queryx, DO NOT EDIT.

package queryx

import (
	"database/sql"
	"database/sql/driver"
)

type BigInt struct {
	Val  int64
	Null bool
	Set  bool
}

func NewBigInt(v int64) BigInt {
	return BigInt{Val: v}
}

func NewNullableBigInt(v *int64) BigInt {
	if v != nil {
		return NewBigInt(*v)
	}
	return BigInt{Null: true}
}

// Scan implements the Scanner interface.
func (b *BigInt) Scan(value interface{}) error {
	n := sql.NullInt64{}
	err := n.Scan(value)
	if err != nil {
		return err
	}
	b.Val, b.Null = n.Int64, !n.Valid
	return nil
}

// Value implements the driver Valuer interface.
func (b BigInt) Value() (driver.Value, error) {
	if b.Null {
		return nil, nil
	}
	return b.Val, nil
}

func (b BigInt) MarshalJSON() ([]byte, error) {
	return nil, nil
}

func (b *BigInt) UnmarshalJSON(text []byte) error {
	return nil
}
