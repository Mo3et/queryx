// Code generated by queryx, DO NOT EDIT.

package queryx

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func TestNewBoolean(t *testing.T) {
	i := NewBoolean(true)
	require.Equal(t, true, i.Val)
	require.Equal(t, false, i.Null)
}

func TestNewNullableBoolean(t *testing.T) {
	i := NewNullableBoolean(nil)
	require.Equal(t, true, i.Null)
}

func TestBooleanScan(t *testing.T) {
	i := NewBoolean(true)
	err := i.Scan(false)
	require.NoError(t, err)
	require.Equal(t, false, i.Val)
}

func TestBooleanValue(t *testing.T) {
	i := NewBoolean(true)
	value, err := i.Value()
	require.NoError(t, err)
	require.Equal(t, true, value)
}

func TestBooleanMarshalJSON(t *testing.T) {
	i := NewBoolean(true)
	_, err := i.MarshalJSON()
	require.NoError(t, err)
}

func TestBooleanUnmarshalJSON(t *testing.T) {
	i := NewBoolean(true)
	bytes, _ := i.MarshalJSON()
	b := NewBoolean(false)
	err := b.UnmarshalJSON(bytes)
	require.NoError(t, err)
	require.Equal(t, true, i.Val)
	require.Equal(t, false, b.Null)
}
