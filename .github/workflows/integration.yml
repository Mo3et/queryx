name: integration
on: push
jobs:
  postgresql:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.2
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: queryx_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build Queryx
        run: go build -o /usr/local/bin/queryx cmd/queryx/main.go
      - name: Queryx Generate
        env:
          QUERYX_ENV: test
        run: |
          cd internal/integration
          queryx db:migrate --schema postgresql.hcl
          queryx generate --schema postgresql.hcl
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: internal/integration/db
      - name: go test
        run: |
          cd internal/integration
          go test -v ./...
  mysql:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.32
        env:
          MYSQL_DATABASE: queryx_test
          MYSQL_USER: mysql
          MYSQL_PASSWORD: mysql
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -uuser_test -pqueryx_test"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build Queryx
        run: go build -o /usr/local/bin/queryx cmd/queryx/main.go
      - name: Queryx Generate
        env:
          QUERYX_ENV: test
        run: |
          cd internal/integration
          queryx db:migrate --schema mysql.hcl
          queryx generate --schema mysql.hcl
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: internal/integration/db
      - name: go test
        run: |
          cd internal/integration
          go test -v ./...

  # sqlite:
  #   runs-on: ubuntu-latest
  #   if: ${{success()}}
  #   needs: [golangci-lint]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: 1.19
  #     - name: download
  #       run: go mod download
  #     - name: Build
  #       run: go build -o /usr/local/bin/queryx cmd/queryx/main.go
  #     - name: blog-sqlite
  #       env:
  #         QUERYX_ENV: test
  #       run: |
  #         echo "echo sqlite......"
  #         cd internal/integration
  #         rm -f test.sqlite3 && touch test.sqlite3
  #         queryx generate --schema sqlite.hcl
  #         queryx db:migrate --schema sqlite.hcl
  #         go test -v ./...
